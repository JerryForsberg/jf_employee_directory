{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17143\\\\Personal_class_resources\\\\jf_employee_directory\\\\jf_employee_directory\\\\employee-directory\\\\src\\\\components\\\\EmployeeContainer.js\";\nimport React, { Component } from \"react\";\nimport getEmployees from \"../utils/API\";\nimport Jumbotron from \"./Jumbotron\";\nimport { MDBDataTableV5 } from 'mdbreact';\n\nclass EmployeeContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      info: []\n    };\n\n    this.loadInitialEmployees = () => [getEmployees().then(response => response.data.results).then(data => {\n      this.setState({\n        employees: data\n      });\n    }).then(async () => {\n      this.setState({\n        info: this.employeeInfo(),\n        isLoading: false\n      }).catch(err => {\n        console.log(err);\n      });\n    })];\n\n    this.employeeInfo = () => {\n      let employees = this.state.employees.map(employee => {\n        return {\n          photo: /*#__PURE__*/React.createElement(\"img\", {\n            src: employee.picture.large,\n            alt: \"employee\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }\n          }),\n          firstName: employee.name.first,\n          lastName: employee.name.last,\n          phoneNumber: employee.phone,\n          city: employee.location.city,\n          email: employee.email,\n          cell: employee.cell\n        };\n      });\n      return employees;\n    };\n  }\n\n  componentDidMount() {\n    this.loadInitialEmployees();\n  }\n\n  render() {\n    // this.state.employees.map(employee => {\n    // });\n    const datatable = {\n      columns: [{\n        label: 'picture',\n        field: 'photo',\n        sort: 'disabled',\n        width: 200\n      }, {\n        label: 'First Name',\n        field: 'firstname',\n        width: 150\n      }, {\n        label: 'Last Name',\n        field: 'lastname',\n        width: 150\n      }, {\n        label: 'City',\n        field: 'City',\n        width: 200\n      }, {\n        label: 'email',\n        field: 'email',\n        width: 200\n      }, {\n        label: 'phone',\n        field: 'phone',\n        width: 200\n      }, {\n        label: 'cell',\n        field: 'cell',\n        width: 200\n      }],\n      rows: this.state.employees\n    };\n    return /*#__PURE__*/React.createElement(MDBDataTableV5, {\n      hover: true,\n      entriesOptions: [10, 25],\n      entries: 10,\n      pagesAmount: 5,\n      data: datatable,\n      pagingTop: true,\n      searchTop: true,\n      searchBottom: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default EmployeeContainer;","map":{"version":3,"sources":["C:/Users/17143/Personal_class_resources/jf_employee_directory/jf_employee_directory/employee-directory/src/components/EmployeeContainer.js"],"names":["React","Component","getEmployees","Jumbotron","MDBDataTableV5","EmployeeContainer","state","employees","info","loadInitialEmployees","then","response","data","results","setState","employeeInfo","isLoading","catch","err","console","log","map","employee","photo","picture","large","firstName","name","first","lastName","last","phoneNumber","phone","city","location","email","cell","componentDidMount","render","datatable","columns","label","field","sort","width","rows"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport getEmployees from \"../utils/API\";\r\nimport Jumbotron from \"./Jumbotron\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\nclass EmployeeContainer extends Component {\r\n    state = {\r\n        employees: [],\r\n        info: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadInitialEmployees();\r\n    }\r\n\r\n    loadInitialEmployees = () => [\r\n        getEmployees()\r\n            .then(response => response.data.results)\r\n            .then(data => {\r\n                this.setState({ employees: data })\r\n            })\r\n            .then(async () => {\r\n                this.setState({ info: this.employeeInfo(), isLoading: false })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n            })\r\n    ];\r\n\r\n    // filterEmployees = () => {\r\n    //     // go through array of current employees with a filter, and if they match filter keep them in array\r\n    //     const filteredEmployees = this.state.employees.filter(employee => {\r\n    //         if (employee.name == this.state.searchFilter) {\r\n    //             return true;\r\n    //         }\r\n    //     });\r\n    //     console.log(\"searching for employee with exact match of \", this.state.searchFilter);\r\n    //     console.log(\"new filtered list is \", filteredEmployees)\r\n\r\n    //     this.setState({\r\n    //         employees: filteredEmployees\r\n    //     });\r\n    // }\r\n\r\n    employeeInfo = () => {\r\n        let employees = this.state.employees.map((employee) => {\r\n            return (\r\n                {\r\n                    photo: <img\r\n                        src={employee.picture.large}\r\n                        alt='employee'\r\n                    />,\r\n                    firstName: employee.name.first,\r\n                    lastName: employee.name.last,\r\n                    phoneNumber: employee.phone,\r\n                    city: employee.location.city,\r\n                    email: employee.email,\r\n                    cell: employee.cell\r\n\r\n\r\n                }\r\n            )\r\n        });\r\n        return employees;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // this.state.employees.map(employee => {\r\n\r\n        // });\r\n\r\n        const datatable = {\r\n            columns: [\r\n                {\r\n                    label: 'picture',\r\n                    field: 'photo',\r\n                    sort: 'disabled',\r\n                    width: 200\r\n\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstname',\r\n                    width: 150,\r\n                   \r\n                }, \r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastname',\r\n                    width: 150,\r\n                   \r\n                },\r\n                {\r\n                    label: 'City',\r\n                    field: 'City',\r\n                    width: 200,\r\n                },\r\n                {\r\n                    label: 'email',\r\n                    field: 'email',\r\n                    width: 200,\r\n                },\r\n                {\r\n                    label: 'phone',\r\n                    field: 'phone',\r\n                    width: 200,\r\n                },\r\n                {\r\n                    label: 'cell',\r\n                    field: 'cell',\r\n                    width: 200,\r\n                }\r\n            ],\r\n            rows: this.state.employees\r\n        }\r\n\r\n\r\n        return (\r\n            < MDBDataTableV5 hover\r\n                entriesOptions={[10, 25]}\r\n                entries={10}\r\n                pagesAmount={5}\r\n                data={datatable}\r\n                pagingTop\r\n                searchTop\r\n                searchBottom={false}\r\n            />\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default EmployeeContainer;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}